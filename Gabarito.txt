1 - Qual é a definição de Tabela hash?
	R: A tabela hash é uma estrutura de dados que utiliza uma função hash para mapear chaves em índices de uma tabela, permitindo o acesso direto aos elementos (valores) correspondentes às chaves.

2 - Quais são as principais características de uma Tabela hash?
	R: As principais características de uma tabela hash são:- Acesso rápido aos elementos através das chaves;- Armazenamento dos elementos de forma distribuída na tabela;- Utilização de uma função hash para mapear as chaves nos índices da tabela.

3 - Quais são os principais métodos de resolução de colisões em uma Tabela hash?
	R: Os principais métodos de resolução de colisões em uma tabela hash são:- Encadeamento separado: armazenamento dos elementos em listas ligadas em cada posição da tabela;- Endereçamento aberto: busca por uma posição vazia na tabela (linear probing, quadratic probing, double hashing, entre outros).

4 - O que é função hash e qual é o seu propósito em uma Tabela hash?
	R: A função hash é responsável por mapear as chaves em índices da tabela hash. O seu propósito é distribuir as chaves de forma uniforme na tabela, minimizando colisões e garantindo um acesso rápido aos elementos.

5 - Explique o conceito de carga em uma Tabela hash.
	R: O conceito de carga em uma tabela hash se refere à quantidade de elementos armazenados em relação ao tamanho da tabela. É calculado pela fórmula: carga = elementos / tamanho da tabela. Uma carga muito alta pode aumentar a ocorrência de colisões e impactar no desempenho da tabela.

6 - Como é feita a busca de um elemento em uma Tabela hash?
	R: A busca de um elemento em uma tabela hash é feita através da obtenção do índice correspondente à chave utilizando a função hash. Em seguida, é verificado se a posição da tabela está ocupada e se a chave é igual à chave buscada. Se as duas condições forem atendidas, o elemento é encontrado.

7 - Qual é a diferença entre uma Tabela hash e uma árvore de busca binária?
	R: A diferença entre uma tabela hash e uma árvore de busca binária é que a tabela hash permite um acesso direto aos elementos através das chaves, enquanto a árvore de busca binária requer uma busca ordenada na estrutura para encontrar um elemento. Além disso, a tabela hash utiliza uma função hash para mapear as chaves nos índices da tabela, enquanto a árvore utiliza a ordenação das chaves nos nós.

8 - Quais são as vantagens e desvantagens do uso de Tabelas hash em relação a outras estruturas de dados?
	R: As vantagens do uso de tabelas hash em relação a outras estruturas de dados são:- Acesso rápido aos elementos através das chaves;- Complexidade de busca amortizada O(1);- Flexibilidade para armazenar diferentes tipos de dados.As desvantagens são:- Possibilidade de colisões;- Necessidade de redimensionar a tabela quando a carga se torna alta.

9 - Quais são as principais aplicações de Tabelas hash em algoritmos e sistemas?
	R: As principais aplicações de tabelas hash em algoritmos e sistemas são:- Dicionários e tradutores;- Indexação de dados em bancos de dados;- Verificação de duplicidades;- Tabelas de símbolos em compiladores e interpretadores;- Implementação de caches e buffers.

10 - Como é possível lidar com colisões em uma Tabela hash?
	R: Para lidar com colisões em uma tabela hash, podem ser utilizados os seguintes métodos:- Encadeamento separado: armazenar os elementos em listas ligadas nas posições da tabela;- Endereçamento aberto: buscar por uma posição vazia na tabela quando ocorre uma colisão, utilizando técnicas como linear probing, quadratic probing, double hashing, entre outros.

